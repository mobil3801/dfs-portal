const t=new class{stationsCache=[];cacheTimestamp=0;CACHE_DURATION=3e5;isLoading=!1;FALLBACK_STATIONS=[{value:"MOBIL",label:"MOBIL",color:"bg-blue-500"},{value:"AMOCO ROSEDALE",label:"AMOCO ROSEDALE",color:"bg-green-500"},{value:"AMOCO BROOKLYN",label:"AMOCO BROOKLYN",color:"bg-purple-500"}];async getStations(){if(this.isCacheValid())return this.stationsCache;if(this.isLoading)return await this.waitForLoading(),this.stationsCache;this.isLoading=!0;try{const{data:t,error:a}=await window.ezsite.apis.tablePage(12599,{PageNo:1,PageSize:100,OrderByField:"station_name",IsAsc:!0,Filters:[{name:"status",op:"Equal",value:"Active"}]});return a?(console.error("Error loading stations from database:",a),this.getFallbackStations()):(this.stationsCache=t?.List||[],this.cacheTimestamp=Date.now(),this.stationsCache)}catch(t){return console.error("Error fetching stations:",t),this.getFallbackStations()}finally{this.isLoading=!1}}async getStationOptions(t=!1,a,e){const s=(await this.getStations()).map(t=>({value:t.station_name,label:t.station_name,color:this.getStationColor(t.station_name),station:t}));return t&&this.canUserViewAll(a,e)&&s.unshift({value:"ALL_STATIONS",label:"All Stations",color:"bg-indigo-600"}),s}async getStationNames(){return(await this.getStations()).map(t=>t.station_name)}async getStationByName(t){return(await this.getStations()).find(a=>a.station_name===t)||null}getStationColor(t){return{MOBIL:"bg-blue-500","AMOCO ROSEDALE":"bg-green-500","AMOCO BROOKLYN":"bg-purple-500"}[t]||"bg-gray-500"}canUserViewAll(t,a){return t&&"string"==typeof t&&("Administrator"===t||"Management"===t||"Manager"===t||Array.isArray(a)&&a.includes("view_all_stations"))||!1}getFallbackStations(){return this.FALLBACK_STATIONS.map((t,a)=>({id:a+1,station_name:t.value,address:"Address not available",phone:"Phone not available",operating_hours:"24/7",manager_name:"Manager not assigned",status:"Active",last_updated:(new Date).toISOString(),created_by:0}))}isCacheValid(){return this.stationsCache.length>0&&Date.now()-this.cacheTimestamp<this.CACHE_DURATION}async waitForLoading(){for(;this.isLoading;)await new Promise(t=>setTimeout(t,100))}clearCache(){this.stationsCache=[],this.cacheTimestamp=0}async addStation(t){try{const{error:a}=await window.ezsite.apis.tableCreate(12599,t);return a?{success:!1,error:a}:(this.clearCache(),{success:!0})}catch(a){return{success:!1,error:String(a)}}}async updateStation(t){try{const{error:a}=await window.ezsite.apis.tableUpdate(12599,t);return a?{success:!1,error:a}:(this.clearCache(),{success:!0})}catch(a){return{success:!1,error:String(a)}}}async deleteStation(t){try{const{error:a}=await window.ezsite.apis.tableDelete(12599,{id:t});return a?{success:!1,error:a}:(this.clearCache(),{success:!0})}catch(a){return{success:!1,error:String(a)}}}async getUserAccessibleStations(t,a,e){const s=(await this.getStations()).map(t=>t.station_name);if(this.canUserViewAll(t,a))return s;const i=[];for(const r of s){const t=`view_${r.toLowerCase().replace(/\s+/g,"_")}`;(Array.isArray(a)&&a.includes(t)||Array.isArray(e)&&e.includes(r))&&i.push(r)}return i}};export{t as s};
