import{r as s}from"./react-core-CKNU0hQt.js";import{s as e}from"./stationService-DqouK_X1.js";import{u as t}from"./index-MtEqlP9w.js";const a=(a=!0)=>{const{userProfile:o}=t(),[n,r]=s.useState([]),[i,l]=s.useState(!0),[c,u]=s.useState(null),S=s.useCallback(async()=>{try{l(!0),u(null);const s=await e.getStationOptions(a,o?.role,o?.permissions);r(s)}catch(s){const e=s instanceof Error?s.message:"Failed to load station options";u(e),r([])}finally{l(!1)}},[a,o?.role,o?.permissions]);s.useEffect(()=>{S()},[S]);const m=s.useCallback(s=>e.getStationColor(s),[]),A=s.useCallback(()=>{const s=o?.role,e=o?.permissions;return s&&"string"==typeof s&&("Administrator"===s||"Management"===s||"Manager"===s||Array.isArray(e)&&e.includes("view_all_stations"))||!1},[o?.role,o?.permissions]),p=s.useCallback(async()=>{try{return await e.getUserAccessibleStations(o?.role,o?.permissions,o?.stationAccess)}catch(s){return console.error("Error getting accessible stations:",s),[]}},[o?.role,o?.permissions,o?.stationAccess]);return{stationOptions:n,loading:i,error:c,getStationColor:m,canSelectAll:A(),getUserAccessibleStations:p,refetch:S}},o=a=>{const{userProfile:o}=t(),[n,r]=s.useState([]),[i,l]=s.useState(!0);s.useEffect(()=>{(async()=>{try{l(!0);const s=await e.getUserAccessibleStations(o?.role,o?.permissions,o?.stationAccess);r(s)}catch(s){console.error("Error loading accessible stations:",s),r([])}finally{l(!1)}})()},[o?.role,o?.permissions,o?.stationAccess]);const c=s.useCallback(()=>"ALL_STATIONS"===a||"ALL"===a?0===n.length?[{name:"station",op:"Equal",value:"__NO_ACCESS__"}]:1===n.length?[{name:"station",op:"Equal",value:n[0]}]:null:[{name:"station",op:"Equal",value:a}],[a,n]),u=a&&"ALL_STATIONS"!==a&&"ALL"!==a,S=s.useCallback(()=>n.map(s=>({name:"station",op:"Equal",value:s})),[n]);return{stationFilters:c(),shouldFilterByStation:u,isAllSelected:"ALL_STATIONS"===a||"ALL"===a,accessibleStations:n,accessibleStationsFilter:S(),loading:i}};export{a,o as u};
