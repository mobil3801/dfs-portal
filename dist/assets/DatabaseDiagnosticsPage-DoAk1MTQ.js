import{j as e}from"./radix-ui-woSLwCdF.js";import{l as s,e as a,T as t,q as i,r as n,s as c,C as r,B as l,A as o,n as m,y as d,v as h,f as u,g as x,k as p}from"./index-CIZJQuMw.js";import{r as b}from"./react-core-CKNU0hQt.js";import{P as g}from"./progress-TWrrrlXZ.js";import{aw as j,g as f,aN as N,aO as y,y as w,R as v,aJ as C,r as k,b as _,T as D,F as S,f as $,s as R}from"./utilities-DMEd7dY0.js";import{A as T}from"./AccessDenied-DixbFBF5.js";import"./routing-DcURAnU1.js";import"./data-management-r38r-ocq.js";import"./animations-CdlE0-Ca.js";const L=()=>{const{toast:h}=s(),[u,x]=b.useState(!1),[p,T]=b.useState(0),[L,P]=b.useState([]),[V,A]=b.useState([]),[E,q]=b.useState([]),[M,Q]=b.useState(""),W=["module_access","products","sales_reports","deliveries"],B=[{table:"licenses",column:"expiry_date"},{table:"audit_logs",column:"event_timestamp"}],[Y,F]=b.useState([{id:"connection",name:"Database Connection",description:"Test Supabase PostgreSQL connection",status:"pending",icon:e.jsx(j,{className:"w-4 h-4"})},{id:"schema_detection",name:"Schema Detection",description:"Detect available database schemas and access permissions",status:"pending",icon:e.jsx(f,{className:"w-4 h-4"})},{id:"table_existence",name:"Critical Tables Check",description:"Verify existence of critical tables (module_access, products, sales_reports, deliveries)",status:"pending",icon:e.jsx(N,{className:"w-4 h-4"})},{id:"column_existence",name:"Critical Columns Check",description:"Verify existence of critical columns (licenses.expiry_date, audit_logs.event_timestamp)",status:"pending",icon:e.jsx(y,{className:"w-4 h-4"})},{id:"permissions_check",name:"Database Permissions",description:"Check read/write permissions on critical tables",status:"pending",icon:e.jsx(w,{className:"w-4 h-4"})}]),U=async e=>{const s=Date.now();try{switch(e){case"connection":return await I();case"schema_detection":return await G();case"table_existence":return await J();case"column_existence":return await O();case"permissions_check":return await z();default:return{passed:!1,duration:Date.now()-s,details:"Unknown test type",recommendations:["Contact system administrator"]}}}catch(a){return{passed:!1,duration:Date.now()-s,details:`Test failed with error: ${a}`,recommendations:["Check database connection","Verify Supabase configuration"]}}},I=async()=>{const e=Date.now();try{const{data:s,error:a}=await d.from("information_schema.tables").select("table_name").limit(1);return a?{passed:!1,duration:Date.now()-e,details:`Connection failed: ${a.message}`,recommendations:["Check Supabase configuration in .env files","Verify database URL and API key","Ensure network connectivity to Supabase"],errorCode:a.code}:{passed:!0,duration:Date.now()-e,details:`Database connection successful (${Date.now()-e}ms)`,recommendations:["Connection is healthy"]}}catch(s){return{passed:!1,duration:Date.now()-e,details:`Connection test failed: ${s.message}`,recommendations:["Verify Supabase project is running","Check environment variables","Test network connectivity"]}}},G=async()=>{const e=Date.now(),s=[];try{const t=["public","auth","storage","realtime","information_schema"];for(const e of t)try{const{data:a,error:t}=await d.from("information_schema.tables").select("table_name").eq("table_schema",e);t?s.push({schemaName:e,tableCount:0,accessible:!1,error:t.message}):s.push({schemaName:e,tableCount:a?.length||0,accessible:!0})}catch(a){s.push({schemaName:e,tableCount:0,accessible:!1,error:a.message})}P(s);const i=s.filter(e=>e.accessible),n=s.find(e=>"public"===e.schemaName);return{passed:n?.accessible??!1,duration:Date.now()-e,details:`Found ${i.length} accessible schemas. Public schema ${n?.accessible?"accessible":"not accessible"}`,recommendations:n?.accessible?["Schema detection successful"]:["Check database schema permissions","Verify RLS policies","Ensure proper database setup"]}}catch(t){return{passed:!1,duration:Date.now()-e,details:`Schema detection failed: ${t.message}`,recommendations:["Check database permissions","Verify Supabase RLS settings","Ensure user has schema access rights"]}}},J=async()=>{const e=Date.now(),s=[];try{for(const e of W)try{const{data:a,error:t}=await d.from(e).select("*").limit(1);if(t){const a=[];"42P01"===t.code&&(a.push(`Create table '${e}' in public schema`),a.push("Run database migration scripts"),a.push("Check if table exists in different schema")),"PGRST116"===t.code&&(a.push(`Table '${e}' exists but no RLS policy allows access`),a.push("Create appropriate RLS policies"),a.push("Check user permissions")),s.push({tableName:e,exists:!1,error:t.message,recommendations:a})}else{const{data:a}=await d.from("information_schema.columns").select("column_name").eq("table_name",e).eq("table_schema","public");s.push({tableName:e,exists:!0,schema:"public",columns:a?.map(e=>e.column_name)||[]})}}catch(a){s.push({tableName:e,exists:!1,error:a.message,recommendations:["Check database connection","Verify table name spelling"]})}A(s);const t=s.filter(e=>e.exists),i=s.filter(e=>!e.exists);return{passed:0===i.length,duration:Date.now()-e,details:`${t.length}/${W.length} critical tables found. Missing: ${i.map(e=>e.tableName).join(", ")}`,recommendations:0===i.length?["All critical tables exist"]:["Create missing tables using migration scripts","Check database schema setup","Verify table creation permissions"]}}catch(t){return{passed:!1,duration:Date.now()-e,details:`Table existence check failed: ${t.message}`,recommendations:["Check database connection","Verify schema permissions","Run database setup scripts"]}}},O=async()=>{const e=Date.now(),s=[];try{for(const{table:e,column:n}of B)try{const{data:a,error:t}=await d.from("information_schema.columns").select("column_name, data_type, is_nullable").eq("table_name",e).eq("column_name",n).eq("table_schema","public").single();if(t||!a){const a=[];"42P01"===t?.code?(a.push(`Table '${e}' does not exist`),a.push("Create the table first")):(a.push(`Add column '${n}' to table '${e}'`),a.push("Run ALTER TABLE command or migration script"),a.push("Check column name spelling")),s.push({tableName:e,columnName:n,exists:!1,error:t?.message||"Column not found",recommendations:a})}else s.push({tableName:e,columnName:n,exists:!0,dataType:a.data_type,isNullable:"YES"===a.is_nullable})}catch(a){s.push({tableName:e,columnName:n,exists:!1,error:a.message,recommendations:["Check database connection","Verify table and column names"]})}q(s);const t=s.filter(e=>e.exists),i=s.filter(e=>!e.exists);return{passed:0===i.length,duration:Date.now()-e,details:`${t.length}/${B.length} critical columns found. Missing: ${i.map(e=>`${e.tableName}.${e.columnName}`).join(", ")}`,recommendations:0===i.length?["All critical columns exist"]:["Add missing columns using ALTER TABLE statements","Run database migration scripts","Check column definitions in schema"]}}catch(t){return{passed:!1,duration:Date.now()-e,details:`Column existence check failed: ${t.message}`,recommendations:["Check database connection","Verify schema permissions","Ensure information_schema access"]}}},z=async()=>{const e=Date.now(),s={canRead:!1,canWrite:!1,canCreate:!1,errors:[]};try{const{error:a}=await d.from("information_schema.tables").select("table_name").limit(1);a?s.errors.push(`Read permission error: ${a.message}`):s.canRead=!0;try{const{error:e}=await d.from("products").select("id").limit(1);e||(s.canWrite=!0)}catch{s.errors.push("Write permission check skipped - table may not exist")}return{passed:s.canRead,duration:Date.now()-e,details:`Read: ${s.canRead?"Yes":"No"}, Write: ${s.canWrite?"Yes":"No"}. Errors: ${s.errors.length}`,recommendations:s.canRead?["Database permissions are functional"]:["Check RLS policies on tables","Verify user authentication","Ensure proper service role configuration","Review Supabase project permissions"]}}catch(a){return{passed:!1,duration:Date.now()-e,details:`Permission check failed: ${a.message}`,recommendations:["Check database authentication","Verify Supabase service role","Review RLS policies","Check connection configuration"]}}},H=s=>{switch(s){case"passed":return e.jsx(k,{className:"w-5 h-5 text-green-500"});case"failed":return e.jsx(_,{className:"w-5 h-5 text-red-500"});case"warning":return e.jsx(R,{className:"w-5 h-5 text-yellow-500"});case"running":return e.jsx(v,{className:"w-5 h-5 text-blue-500 animate-spin"});default:return e.jsx($,{className:"w-5 h-5 text-gray-400"})}},K=e=>{switch(e){case"passed":return"bg-green-100 text-green-800 border-green-200";case"failed":return"bg-red-100 text-red-800 border-red-200";case"warning":return"bg-yellow-100 text-yellow-800 border-yellow-200";case"running":return"bg-blue-100 text-blue-800 border-blue-200";default:return"bg-gray-100 text-gray-800 border-gray-200"}};return e.jsxs("div",{className:"space-y-6",children:[e.jsxs("div",{className:"flex items-center justify-between",children:[e.jsxs("div",{children:[e.jsx("h2",{className:"text-2xl font-bold text-gray-900",children:"Database Schema Diagnostics"}),e.jsx("p",{className:"text-gray-600",children:"Diagnose PostgreSQL schema issues including missing tables, columns, and permission errors"}),M&&e.jsxs("p",{className:"text-sm text-gray-500 mt-1",children:["Last updated: ",M]})]}),e.jsxs("div",{className:"flex items-center space-x-2",children:[e.jsxs(a,{onClick:()=>{F(e=>e.map(e=>({...e,status:"pending",duration:void 0,details:void 0,recommendations:void 0,errorCode:void 0}))),T(0),P([]),A([]),q([]),Q("")},variant:"outline",disabled:u,children:[e.jsx(v,{className:"w-4 h-4 mr-2"}),"Reset"]}),e.jsxs(a,{onClick:async()=>{x(!0),T(0),P([]),A([]),q([]),h({title:"Database Diagnostics Started",description:"Running comprehensive database schema validation..."});const e=Y.length;for(let t=0;t<e;t++){const s=Y[t];F(e=>e.map(e=>e.id===s.id?{...e,status:"running"}:e));const a=await U(s.id);F(e=>e.map(e=>e.id===s.id?{...e,status:a.passed?"passed":"failed",duration:a.duration,details:a.details,recommendations:a.recommendations,errorCode:a.errorCode}:e)),T((t+1)/e*100)}x(!1),Q((new Date).toLocaleTimeString());const s=Y.filter(e=>"passed"===e.status).length,a=Y.filter(e=>"failed"===e.status).length;h({title:"Database Diagnostics Complete",description:`${s}/${e} tests passed. Check results for schema issues.`,variant:a>0?"destructive":"default"})},disabled:u,className:"bg-blue-500 hover:bg-blue-600",children:[e.jsx(C,{className:"w-4 h-4 mr-2"}),u?"Running...":"Run Diagnostics"]})]})]}),e.jsxs(t,{defaultValue:"tests",className:"w-full",children:[e.jsxs(i,{className:"grid w-full grid-cols-4",children:[e.jsx(n,{value:"tests",children:"Diagnostic Tests"}),e.jsx(n,{value:"schema",children:"Schema Info"}),e.jsx(n,{value:"tables",children:"Table Status"}),e.jsx(n,{value:"columns",children:"Column Status"})]}),e.jsxs(c,{value:"tests",className:"space-y-4",children:[u&&e.jsx(r,{className:"p-4",children:e.jsxs("div",{className:"space-y-2",children:[e.jsxs("div",{className:"flex items-center justify-between",children:[e.jsx("span",{className:"text-sm font-medium",children:"Progress"}),e.jsxs("span",{className:"text-sm text-gray-500",children:[Math.round(p),"%"]})]}),e.jsx(g,{value:p,className:"w-full"})]})}),e.jsx("div",{className:"grid gap-4",children:Y.map(s=>e.jsxs(r,{className:`p-4 border-2 ${K(s.status)}`,children:[e.jsxs("div",{className:"flex items-center justify-between",children:[e.jsxs("div",{className:"flex items-center space-x-3",children:[s.icon,e.jsxs("div",{children:[e.jsx("h3",{className:"font-semibold",children:s.name}),e.jsx("p",{className:"text-sm text-gray-600",children:s.description}),s.details&&e.jsx("p",{className:"text-xs text-gray-500 mt-1",children:s.details}),s.errorCode&&e.jsxs(l,{variant:"destructive",className:"text-xs mt-1",children:["Error Code: ",s.errorCode]})]})]}),e.jsxs("div",{className:"flex items-center space-x-2",children:[s.duration&&e.jsxs(l,{variant:"outline",className:"text-xs",children:[s.duration,"ms"]}),H(s.status)]})]}),s.recommendations&&s.recommendations.length>0&&e.jsxs("div",{className:"mt-3 pt-3 border-t",children:[e.jsx("h4",{className:"text-sm font-medium mb-2",children:"Recommendations:"}),e.jsx("ul",{className:"list-disc list-inside text-xs text-gray-600 space-y-1",children:s.recommendations.map((s,a)=>e.jsx("li",{children:s},a))})]})]},s.id))})]}),e.jsx(c,{value:"schema",className:"space-y-4",children:e.jsxs("div",{className:"grid gap-4",children:[L.map(s=>e.jsx(r,{className:"p-4",children:e.jsxs("div",{className:"flex items-center justify-between",children:[e.jsxs("div",{children:[e.jsx("h3",{className:"font-semibold",children:s.schemaName}),e.jsx("p",{className:"text-sm text-gray-600",children:s.accessible?`${s.tableCount} tables accessible`:"Not accessible"}),s.error&&e.jsx("p",{className:"text-xs text-red-600 mt-1",children:s.error})]}),e.jsxs("div",{className:"flex items-center space-x-2",children:[e.jsx(l,{variant:s.accessible?"default":"destructive",className:"text-xs",children:s.accessible?"Accessible":"Blocked"}),s.accessible?e.jsx(k,{className:"w-5 h-5 text-green-500"}):e.jsx(_,{className:"w-5 h-5 text-red-500"})]})]})},s.schemaName)),0===L.length&&e.jsxs(o,{children:[e.jsx(D,{className:"h-4 w-4"}),e.jsx(m,{children:"No schema information available. Run diagnostics to detect database schemas."})]})]})}),e.jsx(c,{value:"tables",className:"space-y-4",children:e.jsxs("div",{className:"grid gap-4",children:[V.map(s=>e.jsxs(r,{className:"p-4",children:[e.jsxs("div",{className:"flex items-center justify-between",children:[e.jsxs("div",{children:[e.jsx("h3",{className:"font-semibold",children:s.tableName}),e.jsx("p",{className:"text-sm text-gray-600",children:s.exists?`Schema: ${s.schema}, ${s.columns?.length||0} columns`:"Table not found"}),s.error&&e.jsx("p",{className:"text-xs text-red-600 mt-1",children:s.error})]}),e.jsxs("div",{className:"flex items-center space-x-2",children:[e.jsx(l,{variant:s.exists?"default":"destructive",className:"text-xs",children:s.exists?"Exists":"Missing"}),s.exists?e.jsx(k,{className:"w-5 h-5 text-green-500"}):e.jsx(_,{className:"w-5 h-5 text-red-500"})]})]}),s.recommendations&&s.recommendations.length>0&&e.jsxs("div",{className:"mt-3 pt-3 border-t",children:[e.jsx("h4",{className:"text-sm font-medium mb-2",children:"Recommendations:"}),e.jsx("ul",{className:"list-disc list-inside text-xs text-gray-600 space-y-1",children:s.recommendations.map((s,a)=>e.jsx("li",{children:s},a))})]})]},s.tableName)),0===V.length&&e.jsxs(o,{children:[e.jsx(D,{className:"h-4 w-4"}),e.jsx(m,{children:"No table information available. Run diagnostics to check critical table existence."})]})]})}),e.jsx(c,{value:"columns",className:"space-y-4",children:e.jsxs("div",{className:"grid gap-4",children:[E.map(s=>e.jsxs(r,{className:"p-4",children:[e.jsxs("div",{className:"flex items-center justify-between",children:[e.jsxs("div",{children:[e.jsxs("h3",{className:"font-semibold",children:[s.tableName,".",s.columnName]}),e.jsx("p",{className:"text-sm text-gray-600",children:s.exists?`Type: ${s.dataType}, Nullable: ${s.isNullable?"Yes":"No"}`:"Column not found"}),s.error&&e.jsx("p",{className:"text-xs text-red-600 mt-1",children:s.error})]}),e.jsxs("div",{className:"flex items-center space-x-2",children:[e.jsx(l,{variant:s.exists?"default":"destructive",className:"text-xs",children:s.exists?"Exists":"Missing"}),s.exists?e.jsx(k,{className:"w-5 h-5 text-green-500"}):e.jsx(_,{className:"w-5 h-5 text-red-500"})]})]}),s.recommendations&&s.recommendations.length>0&&e.jsxs("div",{className:"mt-3 pt-3 border-t",children:[e.jsx("h4",{className:"text-sm font-medium mb-2",children:"Recommendations:"}),e.jsx("ul",{className:"list-disc list-inside text-xs text-gray-600 space-y-1",children:s.recommendations.map((s,a)=>e.jsx("li",{children:s},a))})]})]},`${s.tableName}.${s.columnName}`)),0===E.length&&e.jsxs(o,{children:[e.jsx(D,{className:"h-4 w-4"}),e.jsx(m,{children:"No column information available. Run diagnostics to check critical column existence."})]})]})})]}),e.jsxs(o,{children:[e.jsx(S,{className:"h-4 w-4"}),e.jsxs(m,{children:[e.jsx("strong",{children:"Error Code Reference:"})," 42P01 = Relation (table) does not exist, 42703 = Column does not exist. This diagnostic tool specifically checks for these common PostgreSQL schema errors in your DFS Portal database."]})]})]})},P=()=>{const{hasMonitoringAccess:s}=h();return s?e.jsxs("div",{className:"container mx-auto p-6 space-y-6",children:[e.jsxs("div",{className:"flex items-center justify-between",children:[e.jsxs("div",{children:[e.jsx("h1",{className:"text-3xl font-bold tracking-tight",children:"Database Schema Diagnostics"}),e.jsx("p",{className:"text-muted-foreground",children:"Diagnose PostgreSQL schema issues including table and column existence errors"})]}),e.jsxs(l,{variant:"outline",className:"px-3 py-1",children:[e.jsx(j,{className:"h-4 w-4 mr-2"}),"Schema Validator"]})]}),e.jsx(r,{className:"border-amber-200 bg-amber-50 dark:bg-amber-950 dark:border-amber-800",children:e.jsxs(u,{children:[e.jsxs(x,{className:"flex items-center space-x-2 text-amber-800 dark:text-amber-200",children:[e.jsx(D,{className:"h-5 w-5"}),e.jsx("span",{children:"PostgreSQL Schema Diagnostics"})]}),e.jsx(p,{className:"text-amber-700 dark:text-amber-300",children:"This tool diagnoses specific PostgreSQL errors: 42P01 (relation not existing) and 42703 (column not existing). Use this when encountering database schema-related issues with tables like module_access, products, sales_reports, deliveries, or missing columns like licenses.expiry_date and audit_logs.event_timestamp."})]})}),e.jsx(L,{})]}):e.jsx(T,{feature:"Database Schema Diagnostics",requiredRole:"Administrator"})};export{P as default};
